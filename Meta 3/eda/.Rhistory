# Load libraries
library(tidyverse)
library(ggpubr)
library(rstatix)
library(nortest)
# Needed by Afex
library(afex)
library(emmeans)
library(performance)
# Multiple Imputation
library(mice)
library(mitml)
# Aligned Rank Transformation ANOVA
library(ARTool)
options(max.print = .Machine$integer.max)
w <- 620
h <- 360
getOption("max.print")
# Load libraries
library(tidyverse)
library(ggpubr)
library(rstatix)
library(nortest)
# Needed by Afex
library(afex)
library(emmeans)
library(performance)
# Multiple Imputation
library(mice)
library(mitml)
# Aligned Rank Transformation ANOVA
library(ARTool)
options(max.print = .Machine$integer.max)
w <- 620
h <- 360
# Load libraries
library(tidyverse)
library(ggpubr)
library(rstatix)
library(nortest)
# Needed by Afex
library(afex)
library(emmeans)
library(performance)
# Multiple Imputation
library(mice)
library(mitml)
# Aligned Rank Transformation ANOVA
library(ARTool)
options(max.print = .Machine$integer.max)
w <- 620
h <- 360
# Set Working Directory
setwd("/home/jekyll/MEI/2_Ano/MEI/Pratica/MEI-Trabalhos-2022/Trabalho/hyp_2/three_way_anova_rm")
# Read data
df <- read.csv("new_results_paired.csv")
# Data Pre-processing
data <- df[df$probability>0.1, ]
data$seed <- factor(data$seed)
data$vertices <- factor(data$vertices)
data$probability <- factor(data$probability)
data$algorithm <- factor(data$algorithm)
# Three-way ANOVA Repeated Measures using aov_car
aov_rm <- aov_car(time ~ vertices*probability*algorithm + Error(seed/algorithm), data=data, fun_aggregate=mean, factorize=TRUE, na.rm=TRUE, include_aov=TRUE)#, anova_table=list(correction = "none", es = "none"))
# Summary of the Three-way ANOVA Repeated Measures
summary(aov_rm)
# Verifies Residuals' Normality
r <- residuals(aov_rm, append = T)
png("residuals.png", width=w, height=h)
qqnorm(r$.residuals)
qqline(r$.residuals)
invisible(dev.off())
# Shapiro-Wilk Normality Test
#shapiro.test(r$.residuals)
# Anderson-Darling Normality Test
ad.test(r$.residuals)
# Verifies Variance's Sphericity
check_sphericity(aov_rm)
# Transform the data
m.art <- art(time ~ vertices*probability*algorithm + Error(seed/algorithm), data=data)
# Verify Appropriateness of ART
summary(m.art)
# Aligned Rank Transform ANOVA
anova(m.art)
art.con(m.art, "vertices")
art.con(m.art, "probability")
art.con(m.art, "algorithm")
art.con(m.art, "vertices:probability", interaction=TRUE)
art.con(m.art, "vertices:algorithm", interaction=TRUE)
art.con(m.art, "probability:algorithm", interaction=TRUE)
art.con(m.art, "vertices:probability:algorithm", interaction=TRUE)
save.image("~/MEI/2_Ano/MEI/Pratica/MEI-Trabalhos-2022/Trabalho/hyp_2/three_way_anova_rm/data.RData")
# Set Working Directory
setwd("~/MEI/2_Ano/MEI/Pratica/MEI-Trabalhos-2022/r")
# Set Working Directory
setwd("~/MEI/2_Ano/MEI/Pratica/MEI-Trabalhos-2022/Entregaveis/Meta 3/eda")
# Libraries
library(ggplot2, quietly=TRUE)
library(stringr, quietly=TRUE)
library(viridis, quietly=TRUE)
w <- 620
h <- 360
data <- read.csv("../results2.csv")
data <- read.csv("results2.csv")
ggplot(data, aes(x=factor(algorithm), y=time, fill=factor(algorithm))) +
geom_boxplot() + scale_fill_viridis_d() +
labs(title="Boxplot", x="Algorithm", y="Execution Time (s)")
data <- read.csv("results2.csv")
filename <- "boxplots.png"
png(paste(root_directory, filename, sep="/"), width=w, height=h)
root_directory <- "Box_Plots"
w <- 620
h <- 360
root_directory <- "Box_Plots"
data <- read.csv("results2.csv")
filename <- "boxplots.png"
png(paste(root_directory, filename, sep="/"), width=w, height=h)
p <- ggplot(data, aes(x=factor(algorithm), y=time, fill=factor(algorithm))) +
geom_boxplot() + scale_fill_viridis_d() +
labs(title="Boxplot", x="Algorithm", y="Execution Time (s)")
print(p)
invisible(dev.off())
