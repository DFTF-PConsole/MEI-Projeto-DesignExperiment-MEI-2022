path <- paste(root_directory, directory, algorithm, sep="/")
if (!dir.exists(path)) {
dir.create(path, recursive=TRUE)
}
filename <- paste(path, paste(algorithm, "txt", sep="."), sep="/")
aux <- data[data$algorithm==algorithm,]
sink(file=filename)
switch (algorithm,
"Dinic" = fit <- lm(time ~ (vertices^2):arcs, data=aux),
"EK" = fit <- lm(time ~ vertices:(arcs^2), data=aux),
"MPM" = fit <- lm(time ~ (vertices^3), data=aux)
)
print(summary(fit))
sink(file=NULL)
for (i in seq(length(plot_names))) {
filename <- paste(plot_names[i], "png", sep=".")
png(paste(path, filename, sep="/"), width=w, height=h)
plot(fit, which=i)
invisible(dev.off())
}
}
# Set Working Directory
setwd("~/MEI/2_Ano/MEI/Pratica/MEI-Trabalhos-2022/r")
# Libraries
library(ggplot2, quietly=TRUE)
library(viridis, quietly=TRUE)
library(plotly, quietly=TRUE)
library(stringr, quietly=TRUE)
w <- 620
h <- 360
root_directory <- "Surfaces_3D"
data <- read.csv("../results2.csv")
data_mean <- aggregate(time ~ algorithm + vertices + probability, data=data, FUN=mean)
data_mean$arcs <- data_mean$probability * ((data_mean$vertices * (data_mean$vertices - 1)) / 2)
algorithms <- unique(data$algorithm)
probabilities <- unique(data$probability)
vertices <- unique(data$vertices)
arcs <- unique(data$arcs)
directory <- "Mean"
fig <- plot_ly()
for (i in seq(length(algorithms))) {
aux <- data_mean[data_mean$algorithm==algorithms[i], ]
fig <- fig %>% add_trace(type="mesh3d", data=aux, x=~vertices, y=~probability, z=~time, color=~algorithm, facecolor=rep(viridis(length(algorithms))[i], nrow(aux) * ncol(aux)), showlegend=TRUE, opacity=0.7)
}
fig <- fig %>% layout(
title = "Mesh 3D",
scene = list(
xaxis = list(title = "Number of Vertices"),
yaxis = list(title = "Number of Arcs"),
zaxis = list(title = "Execution Time (s)")
)
)
fig
fig <- plot_ly()
for (i in seq(length(algorithms))) {
aux <- data_mean[data_mean$algorithm==algorithms[i], ]
fig <- fig %>% add_trace(type="mesh3d", data=aux, x=~vertices, y=~arcs, z=~time, color=~algorithm, facecolor=rep(viridis(length(algorithms))[i], nrow(aux) * ncol(aux)), showlegend=TRUE, opacity=0.7)
}
fig <- fig %>% layout(
title = "Mesh 3D",
scene = list(
xaxis = list(title = "Number of Vertices"),
yaxis = list(title = "Number of Arcs"),
zaxis = list(title = "Execution Time (s)")
)
)
fig
# Libraries
library(ggplot2)
# Set Working Directory
setwd("~/MEI/2_Ano/MEI/Pratica/MEI-Trabalhos-2022/r")
# Libraries
library(ggplot2)
library(stringr)
library(viridis)
w <- 620
h <- 360
root_directory <- "Line_Plots_2D"
root_directory <- "Line_Plots"
data <- read.csv("../results2.csv")
data_mean <- aggregate(time ~ algorithm + vertices + probability, data=data, FUN=mean)
data_mean[data_mean$vertices>=100,]
data_mean[data_mean$vertices>=100&data_mean$vertices<=300,]
data_mean_filtered <- data_mean[data_mean$vertices>=100&data_mean$vertices<=300,]
algorithms <- unique(data$algorithm)
probabilities <- unique(data$probability)
vertices <- unique(data$vertices)
arcs <- unique(data$arcs)
algorithms <- unique(data_mean_filtered$algorithm)
probabilities <- unique(data_mean_filtered$probability)
vertices <- unique(data_mean_filtered$vertices)
# Mean of the 30 instances
parent_directory <- "Mean"
directory <- "Vertices_Fixed"
data_mean <- aggregate(time ~ algorithm + vertices + probability, data=data, FUN=mean)
data_mean <- data_mean[data_mean$vertices>=100&data_mean$vertices<=300,]
algorithms <- unique(data_mean$algorithm)
probabilities <- unique(data_mean$probability)
vertices <- unique(data_mean$vertices)
# Mean of the 30 instances
parent_directory <- "Mean"
directory <- "Vertices_Fixed"
for (algorithm in algorithms) {
path <- paste(paste(paste(root_directory, parent_directory, sep="/"), directory, sep="/"), algorithm, sep="/")
if (!dir.exists(path)) {
dir.create(path, recursive=TRUE)
}
for (vertice in vertices) {
filename <- paste(algorithm, paste(paste("line_plot", vertice, sep="_v_"), "png", sep="."), sep="_")
png(paste(path, filename, sep="/"), width=w, height=h)
aux <- data_mean[data_mean$algorithm==algorithm&data_mean$vertices==vertice, c("probability", "time")]
p <- ggplot(aux, aes(x=probability, y=time)) + geom_line() + geom_point() +
labs(title=paste(algorithm, paste("when vertices=", vertice, sep=""), sep=" "), x="Probability", y = "Execution Time (s)")
print(p)
invisible(dev.off())
}
}
path <- paste(paste(paste(root_directory, parent_directory, sep="/"), directory, sep="/"), "All", sep="/")
if (!dir.exists(path)) {
dir.create(path, recursive=TRUE)
}
for (vertice in vertices) {
filename <- paste("All", paste(paste("line_plot", vertice, sep="_v_"), "png", sep="."), sep="_")
png(paste(path, filename, sep="/"), width=w, height=h)
aux <- data_mean[data_mean$vertices==vertice, c("algorithm", "probability", "time")]
p <- ggplot(aux, aes(x=probability, y=time, group=algorithm)) +
geom_line(aes(color=algorithm)) + geom_point(aes(color=algorithm)) +
scale_colour_viridis_d() +
labs(title=paste("When vertices=", vertice, sep=""), x="Probability", y = "Execution Time (s)")
print(p)
invisible(dev.off())
}
directory <- "Probabilities_Fixed"
for (algorithm in algorithms) {
path <- paste(paste(paste(root_directory, parent_directory, sep="/"), directory, sep="/"), algorithm, sep="/")
if (!dir.exists(path)) {
dir.create(path, recursive=TRUE)
}
for (probability in probabilities) {
filename <- paste(algorithm, paste(paste("line_plot", probability, sep="_p_"), "png", sep="."), sep="_")
png(paste(path, filename, sep="/"), width=w, height=h)
aux <- data_mean[data_mean$algorithm==algorithm&data_mean$probability==probability, c("vertices", "time")]
p <- ggplot(aux, aes(x=vertices, y=time)) + geom_point() +
labs(title=paste(algorithm, paste("when p=", probability, sep=""), sep=" "), x="Number of Vertices", y = "Execution Time (s)")
print(p)
invisible(dev.off())
}
}
path <- paste(paste(paste(root_directory, parent_directory, sep="/"), directory, sep="/"), "All", sep="/")
if (!dir.exists(path)) {
dir.create(path, recursive=TRUE)
}
for (probability in probabilities) {
filename <- paste(algorithm, paste(paste("line_plot", probability, sep="_p_"), "png", sep="."), sep="_")
png(paste(path, filename, sep="/"), width=w, height=h)
aux <- data_mean[data_mean$probability==probability, c("algorithm", "vertices", "time")]
p <- ggplot(aux, aes(x=vertices, y=time, group=algorithm)) +
geom_line(aes(color=algorithm)) + geom_point(aes(color=algorithm)) +
scale_colour_viridis_d() +
labs(title=paste("When p=", probability, sep=""), x="Number of Vertices", y = "Execution Time (s)")
print(p)
invisible(dev.off())
}
# Set Working Directory
setwd("~/MEI/2_Ano/MEI/Pratica/MEI-Trabalhos-2022/r")
# Set Working Directory
setwd("~/MEI/2_Ano/MEI/Pratica/MEI-Trabalhos-2022/r")
# Libraries
library(ggplot2)
# Set Working Directory
setwd("~/MEI/2_Ano/MEI/Pratica/MEI-Trabalhos-2022/r")
# Libraries
library(ggplot2, quietly=TRUE)
library(stringr, quietly=TRUE)
library(viridis, quietly=TRUE)
w <- 620
h <- 360
root_directory <- "Box_Plots"
data <- read.csv("../results2.csv")
data_mean <- aggregate(time ~ algorithm + vertices + probability, data=data, FUN=mean)
data_mean$arcs <- data_mean$probability * ((data_mean$vertices * (data_mean$vertices - 1)) / 2)
algorithms <- unique(data$algorithm)
probabilities <- unique(data$probability)
vertices <- unique(data$vertices)
directory <- "Vertices_Fixed"
for (algorithm in algorithms) {
path <- paste(root_directory, directory, algorithm, sep="/")
if (!dir.exists(path)) {
dir.create(path, recursive=TRUE)
}
for (vertice in vertices) {
filename <- paste(algorithm, "_box_plot_v_", vertice, ".png", sep="")
png(paste(path, filename, sep="/"), width=w, height=h)
aux <- data[data$algorithm==algorithm&data$vertices==vertice, c("probability", "time")]
p <- ggplot(aux, aes(x=factor(probability), y=time, fill=factor(probability))) +
geom_boxplot() + scale_fill_viridis_d() +
labs(title=paste(algorithm, " when v=", vertice, sep=""), x="Probability", y="Execution Time (s)")
print(p)
invisible(dev.off())
}
}
directory <- "Probabilities_Fixed"
for (algorithm in algorithms) {
path <- paste(root_directory, directory, algorithm, sep="/")
if (!dir.exists(path)) {
dir.create(path, recursive=TRUE)
}
for (probability in probabilities) {
filename <- paste(algorithm, "_box_plot_p_", probability, ".png", sep="")
png(paste(path, filename, sep="/"), width=w, height=h)
aux <- data[data$algorithm==algorithm&data$probability==probability, c("vertices", "time")]
p <- ggplot(aux, aes(x=factor(vertices), y=time, fill=factor(vertices))) +
geom_boxplot() + scale_fill_viridis_d() +
labs(title=paste(algorithm, " when p=", probability, sep=""), x="Number of Vertices", y="Execution Time (s)")
print(p)
invisible(dev.off())
}
}
# Set Working Directory
setwd("~/MEI/2_Ano/MEI/Pratica/MEI-Trabalhos-2022/r")
# Libraries
library(ggplot2, quietly=TRUE)
library(stringr, quietly=TRUE)
library(viridis, quietly=TRUE)
w <- 620
h <- 360
root_directory <- "Linear_Regression_Interactions"
data <- read.csv("../results2.csv")
algorithms <- unique(data$algorithm)
plot_names <- c("residuals_vs_fitted", "normalqq_plot", "scale_location", "cooks_distance", "residuals_vs_leverage", "cooks_dist_vs_leverage")
for (algorithm in algorithms) {
path <- paste(root_directory, algorithm, sep="/")
if (!dir.exists(path)) {
dir.create(path, recursive=TRUE)
}
filename <- paste(path, paste(algorithm, "txt", sep="."), sep="/")
aux <- data[data$algorithm==algorithm,]
sink(file=filename)
fit <- lm(time ~ vertices * arcs, data=aux)
print(summary(fit))
sink(file=NULL)
for (i in seq(length(plot_names))) {
filename <- paste(plot_names[i], "png", sep=".")
png(paste(path, filename, sep="/"), width=w, height=h)
plot(fit, which=i)
invisible(dev.off())
}
}
# Set Working Directory
setwd("~/MEI/2_Ano/MEI/Pratica/MEI-Trabalhos-2022/r")
# Libraries
library(ggplot2, quietly=TRUE)
library(stringr, quietly=TRUE)
library(viridis, quietly=TRUE)
w <- 620
h <- 360
root_directory <- "Linear_Regression"
data <- read.csv("../results2.csv")
algorithms <- unique(data$algorithm)
plot_names <- c("residuals_vs_fitted", "normalqq_plot", "scale_location", "cooks_distance", "residuals_vs_leverage", "cooks_dist_vs_leverage")
directory <- "No_Mean"
for (algorithm in algorithms) {
path <- paste(root_directory, algorithm, sep="/")
if (!dir.exists(path)) {
dir.create(path, recursive=TRUE)
}
filename <- paste(path, paste(algorithm, "txt", sep="."), sep="/")
aux <- data[data$algorithm==algorithm,]
sink(file=filename)
fit <- lm(time ~ vertices + arcs, data=aux)
print(summary(fit))
sink(file=NULL)
for (i in seq(length(plot_names))) {
filename <- paste(plot_names[i], "png", sep=".")
png(paste(path, filename, sep="/"), width=w, height=h)
plot(fit, which=i)
invisible(dev.off())
}
}
# Set Working Directory
setwd("~/MEI/2_Ano/MEI/Pratica/MEI-Trabalhos-2022/r")
# Libraries
library(ggplot2, quietly=TRUE)
library(stringr, quietly=TRUE)
library(viridis, quietly=TRUE)
w <- 620
h <- 360
root_directory <- "Linear_Regression_Transformed"
data <- read.csv("../results2.csv")
data_mean <- aggregate(time ~ algorithm + vertices + probability, data=data, FUN=mean)
algorithms <- unique(data$algorithm)
plot_names <- c("residuals_vs_fitted", "normalqq_plot", "scale_location", "cooks_distance", "residuals_vs_leverage", "cooks_dist_vs_leverage")
for (algorithm in algorithms) {
path <- paste(root_directory, algorithm, sep="/")
if (!dir.exists(path)) {
dir.create(path, recursive=TRUE)
}
filename <- paste(path, paste(algorithm, "txt", sep="."), sep="/")
aux <- data[data$algorithm==algorithm,]
sink(file=filename)
switch (algorithm,
"Dinic" = fit <- lm(sqrt(time) ~ vertices:sqrt(arcs), data=aux),
"EK" = fit <- lm(sqrt(time) ~ sqrt(vertices):arcs, data=aux),
"MPM" = fit <- lm(time^(1/3) ~ vertices, data=aux)
)
print(summary(fit))
sink(file=NULL)
for (i in seq(length(plot_names))) {
filename <- paste(plot_names[i], "png", sep=".")
png(paste(path, filename, sep="/"), width=w, height=h)
plot(fit, which=i)
invisible(dev.off())
}
}
# Set Working Directory
setwd("~/MEI/2_Ano/MEI/Pratica/MEI-Trabalhos-2022/r")
# Libraries
library(ggplot2, quietly=TRUE)
library(stringr, quietly=TRUE)
library(viridis, quietly=TRUE)
w <- 620
h <- 360
root_directory <- "Linear_Regression_Interactions_Transformed_2"
data <- read.csv("../results2.csv")
algorithms <- unique(data$algorithm)
plot_names <- c("residuals_vs_fitted", "normalqq_plot", "scale_location", "cooks_distance", "residuals_vs_leverage", "cooks_dist_vs_leverage")
for (algorithm in algorithms) {
path <- paste(root_directory, algorithm, sep="/")
if (!dir.exists(path)) {
dir.create(path, recursive=TRUE)
}
filename <- paste(path, paste(algorithm, "txt", sep="."), sep="/")
aux <- data[data$algorithm==algorithm,]
sink(file=filename)
switch (algorithm,
"Dinic" = fit <- lm(time ~ (vertices^2):arcs, data=aux),
"EK" = fit <- lm(time ~ vertices:(arcs^2), data=aux),
"MPM" = fit <- lm(time ~ (vertices^3), data=aux)
)
print(summary(fit))
sink(file=NULL)
for (i in seq(length(plot_names))) {
filename <- paste(plot_names[i], "png", sep=".")
png(paste(path, filename, sep="/"), width=w, height=h)
plot(fit, which=i)
invisible(dev.off())
}
}
root_directory <- "Linear_Regression_Transformed_2"
data <- read.csv("../results2.csv")
algorithms <- unique(data$algorithm)
plot_names <- c("residuals_vs_fitted", "normalqq_plot", "scale_location", "cooks_distance", "residuals_vs_leverage", "cooks_dist_vs_leverage")
for (algorithm in algorithms) {
path <- paste(root_directory, algorithm, sep="/")
if (!dir.exists(path)) {
dir.create(path, recursive=TRUE)
}
filename <- paste(path, paste(algorithm, "txt", sep="."), sep="/")
aux <- data[data$algorithm==algorithm,]
sink(file=filename)
switch (algorithm,
"Dinic" = fit <- lm(time ~ (vertices^2):arcs, data=aux),
"EK" = fit <- lm(time ~ vertices:(arcs^2), data=aux),
"MPM" = fit <- lm(time ~ (vertices^3), data=aux)
)
print(summary(fit))
sink(file=NULL)
for (i in seq(length(plot_names))) {
filename <- paste(plot_names[i], "png", sep=".")
png(paste(path, filename, sep="/"), width=w, height=h)
plot(fit, which=i)
invisible(dev.off())
}
}
# Set Working Directory
setwd("~/MEI/2_Ano/MEI/Pratica/MEI-Trabalhos-2022/r")
# Libraries
library(ggplot2, quietly=TRUE)
library(stringr, quietly=TRUE)
library(viridis, quietly=TRUE)
w <- 620
h <- 360
root_directory <- "Polinomial_Regression"
data <- read.csv("../results2.csv")
algorithms <- unique(data$algorithm)
plot_names <- c("residuals_vs_fitted", "normalqq_plot", "scale_location", "cooks_distance", "residuals_vs_leverage", "cooks_dist_vs_leverage")
for (algorithm in algorithms) {
path <- paste(root_directory, algorithm, sep="/")
if (!dir.exists(path)) {
dir.create(path, recursive=TRUE)
}
filename <- paste(path, paste(algorithm, "txt", sep="."), sep="/")
aux <- data[data$algorithm==algorithm,]
sink(file=filename)
switch (algorithm,
"Dinic" = fit <- lm(time ~ poly(vertices, 2, raw=TRUE):arcs, data=aux),
"EK" = fit <- lm(time ~ sqrt(vertices):poly(arcs, 2, raw=TRUE), data=aux),
"MPM" = fit <- lm(time ~ poly(vertices, 3, raw=TRUE), data=aux)
)
print(summary(fit))
sink(file=NULL)
for (i in seq(length(plot_names))) {
filename <- paste(plot_names[i], "png", sep=".")
png(paste(path, filename, sep="/"), width=w, height=h)
plot(fit, which=i)
invisible(dev.off())
}
}
# Set Working Directory
setwd("~/MEI/2_Ano/MEI/Pratica/MEI-Trabalhos-2022/r")
# Libraries
library(ggplot2, quietly=TRUE)
library(stringr, quietly=TRUE)
library(viridis, quietly=TRUE)
w <- 620
h <- 360
root_directory <- "Polinomial_Regression"
data <- read.csv("../results2.csv")
algorithms <- unique(data$algorithm)
plot_names <- c("residuals_vs_fitted", "normalqq_plot", "scale_location", "cooks_distance", "residuals_vs_leverage", "cooks_dist_vs_leverage")
for (algorithm in algorithms) {
path <- paste(root_directory, algorithm, sep="/")
if (!dir.exists(path)) {
dir.create(path, recursive=TRUE)
}
filename <- paste(path, paste(algorithm, "txt", sep="."), sep="/")
aux <- data[data$algorithm==algorithm,]
sink(file=filename)
switch (algorithm,
"Dinic" = fit <- lm(time ~ poly(vertices, 2, raw=TRUE):arcs, data=aux),
"EK" = fit <- lm(time ~ vertices:poly(arcs, 2, raw=TRUE), data=aux),
"MPM" = fit <- lm(time ~ poly(vertices, 3, raw=TRUE), data=aux)
)
print(summary(fit))
sink(file=NULL)
for (i in seq(length(plot_names))) {
filename <- paste(plot_names[i], "png", sep=".")
png(paste(path, filename, sep="/"), width=w, height=h)
plot(fit, which=i)
invisible(dev.off())
}
}
data$x <- data$vertices
View(data)
data$vertices^2
data$vertices^2 * data$arcs
nrow(data)
data$x <- rep(0, nrow(data))
View(data)
root_directory <- "Linear_Regression_Interactions_Transformed_3"
data <- read.csv("../results2.csv")
data$x <- rep(0, nrow(data))
View(data)
data[data$algorithm=="Dinic",]$x <- data[data$algorithm=="Dinic",]$vertices^2 * data[data$algorithm=="Dinic",]$arcs
View(data)
data[data$algorithm=="Dinic",]$x <- data[data$algorithm=="Dinic",]$vertices^2 * data[data$algorithm=="Dinic",]$arcs
data[data$algorithm=="EK",]$x <- data[data$algorithm=="EK",]$arcs^2 * data[data$algorithm=="EK",]$vertices
data[data$algorithm=="MPM",]$x <- data[data$algorithm=="MPM",]$vertices^3
algorithms <- unique(data$algorithm)
plot_names <- c("residuals_vs_fitted", "normalqq_plot", "scale_location", "cooks_distance", "residuals_vs_leverage", "cooks_dist_vs_leverage")
for (algorithm in algorithms) {
path <- paste(root_directory, algorithm, sep="/")
if (!dir.exists(path)) {
dir.create(path, recursive=TRUE)
}
filename <- paste(path, paste(algorithm, "txt", sep="."), sep="/")
df <- data[data$algorithm==algorithm,]
sink(file=filename)
fit <- lm(time ~ x, data=df)
print(summary(fit))
sink(file=NULL)
for (i in seq(length(plot_names))) {
filename <- paste(plot_names[i], "png", sep=".")
png(paste(path, filename, sep="/"), width=w, height=h)
plot(fit, which=i)
invisible(dev.off())
}
}
# Set Working Directory
setwd("~/MEI/2_Ano/MEI/Pratica/MEI-Trabalhos-2022/r")
# Libraries
library(ggplot2, quietly=TRUE)
library(stringr, quietly=TRUE)
library(viridis, quietly=TRUE)
w <- 620
h <- 360
root_directory <- "Linear_Regression_Transformed_3"
data <- read.csv("../results2.csv")
data$x <- rep(0, nrow(data))
data[data$algorithm=="Dinic",]$x <- data[data$algorithm=="Dinic",]$vertices^2 * data[data$algorithm=="Dinic",]$arcs
data[data$algorithm=="EK",]$x <- data[data$algorithm=="EK",]$arcs^2 * data[data$algorithm=="EK",]$vertices
data[data$algorithm=="MPM",]$x <- data[data$algorithm=="MPM",]$vertices^3
algorithms <- unique(data$algorithm)
plot_names <- c("residuals_vs_fitted", "normalqq_plot", "scale_location", "cooks_distance", "residuals_vs_leverage", "cooks_dist_vs_leverage")
for (algorithm in algorithms) {
path <- paste(root_directory, algorithm, sep="/")
if (!dir.exists(path)) {
dir.create(path, recursive=TRUE)
}
filename <- paste(path, paste(algorithm, "txt", sep="."), sep="/")
df <- data[data$algorithm==algorithm,]
sink(file=filename)
fit <- lm(time ~ x, data=df)
print(summary(fit))
sink(file=NULL)
for (i in seq(length(plot_names))) {
filename <- paste(plot_names[i], "png", sep=".")
png(paste(path, filename, sep="/"), width=w, height=h)
plot(fit, which=i)
invisible(dev.off())
}
}
